/*
 * This source file was generated by the Gradle 'init' task
 */
package com.main.source;

import java.util.Collections;
import java.util.List;

import org.apache.kafka.clients.consumer.KafkaConsumer;

import com.main.source.kafka.ConsumerThread;
import com.main.source.kafka.KafkaConnector;
import com.main.source.utils.FileReaderUtil;

public class App {
    public static void main(String[] args) {
        Producer();
    }

    private static void Producer(){
        List<String> sentences = FileReaderUtil.readSentencesFromResources("random_sentences.txt");

        String[] keys = {"a01", "b02", "c03", "40d"};

        KafkaConnector connector = KafkaConnector.create("localhost:29092,localhost:39092,localhost:49092");

        int index = 0;
        while (true) {  // 무한 루프
            try {
                Thread.sleep(1000);  // 1초 대기

                String key = keys[(int) (Math.random() * keys.length)];
                connector.send("sentence", key, sentences.get(index));
                index = (index + 1) % sentences.size();    // 인덱스 증가, 끝에 도달하면 다시 0으로
                
            } catch (InterruptedException e) {
            }
        }
    }

    private static void Consumer(String topic, int connectionCount){
        KafkaConnector connector = KafkaConnector.create("localhost:29092,localhost:39092,localhost:49092");

        for (int i = 0; i < connectionCount; i++){
            connector.setConsumer(topic, i);
            KafkaConsumer consumer = connector.getConsumer(topic, i);
            consumer.subscribe(Collections.singletonList("sentence"));
            Thread thread = new Thread(new ConsumerThread(consumer));
            thread.start();
        }
    }
}
